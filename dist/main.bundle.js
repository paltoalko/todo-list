(()=>{"use strict";var t={426:(t,n,e)=>{e.d(n,{Z:()=>i});var r=e(537),o=e.n(r),a=e(645),A=e.n(a)()(o());A.push([t.id,"@import url(https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap);"]),A.push([t.id,":root {\n\t--clr-primary: rgb(141, 89, 201);\n\t--clr-light: #f4f4f4;\n\t--clr-dark: #333;\n\t--clr-warning: rgb(99, 36, 36);\n}\n\n*,\n*::before,\n*::after {\n\tfont-family: inherit;\n\tbox-sizing: border-box;\n\tfont-family: 'Montserrat', sans-serif;\n}\n\nbody {\n\tmargin: 0;\n\tfont-family: 'Work Sans', sans-serif;\n\tfont-weight: 300;\n\tfont-size: 1.5rem;\n\tbackground-color: var(--clr-primary);\n\tcolor: var(--clr-light);\n\tdisplay: grid;\n\tgrid:\n\t\t'header header header header' auto '...... lists  active ......' auto/1fr minmax(\n\t\t\t100px,\n\t\t\t300px\n\t\t)\n\t\tminmax(250px, 500px) 1fr;\n}\n\n.title {\n\tgrid-area: header;\n\ttext-align: center;\n\tfont-size: calc(7vw + 2rem);\n\tfont-weight: 900;\n\tcolor: rgba(0, 0, 0, 0.1);\n\tletter-spacing: 2px;\n\tmargin: -0.3em 0 0.5em;\n}\n\n.all-tasks {\n\tgrid-area: lists;\n}\n\n.task-list {\n\tfont-size: 1.2rem;\n\tline-height: 1.7;\n\tlist-style: circle;\n\tpadding-left: 1.1em;\n}\n\n.list-name {\n\tcursor: pointer;\n}\n\n.list-name:hover {\n\topacity: 0.7;\n}\n\nform {\n\tdisplay: flex;\n}\n\n.btn {\n\tcursor: pointer;\n\tbackground: 0;\n\tborder: 0;\n\tpadding: 0;\n\tcolor: inherit;\n}\n\n.btn.create {\n\tfont-size: 1.5rem;\n\tfont-weight: 900;\n\tmargin-right: 0.25em;\n\ttransition: opacity 250ms ease-in;\n}\n\n.btn.create:hover {\n\topacity: 0.7;\n}\n\n.btn.delete {\n\topacity: 0.7;\n\tfont-size: 1rem;\n\ttransition: color 200ms;\n}\n\n.btn.delete:hover {\n\tcolor: var(--clr-warning);\n}\n\n.new {\n\tbackground: transparent;\n\tborder: 0;\n\tcolor: inherit;\n\tborder-bottom: 1px solid currentColor;\n\tfont-size: inherit;\n\toutline: none;\n\tpadding: 0.25em;\n\ttransition: border-bottom 150ms ease-in;\n\torder: 2;\n}\n\n.new::-webkit-input-placeholder {\n\topacity: 0.4;\n}\n\n.new:-ms-input-placeholder {\n\topacity: 0.4;\n}\n\n.new::-ms-input-placeholder {\n\topacity: 0.4;\n}\n\n.new.list::placeholder {\n\tcolor: white;\n}\n.new::placeholder {\n\topacity: 0.4;\n}\n\n.new:focus {\n\tborder-bottom-width: 3px;\n}\n\n.new:focus::-webkit-input-placeholder {\n\topacity: 0.15;\n}\n\n.new:focus:-ms-input-placeholder {\n\topacity: 0.15;\n}\n\n.new:focus::-ms-input-placeholder {\n\topacity: 0.15;\n}\n\n.new:focus::placeholder {\n\topacity: 0.15;\n}\n\n.new.list {\n\tfont-size: 1.1rem;\n}\n\n.new.task {\n\tmargin-bottom: 0;\n}\n\n.active-list {\n\tfont-weight: 700;\n}\n\n.todo-list {\n\t--spacer: 2rem;\n\tgrid-area: active;\n\tbackground: var(--clr-light);\n\tcolor: var(--clr-dark);\n}\n\n.todo-header {\n\tpadding: var(--spacer);\n\tbackground: #e4e4e4;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n}\n\n.list-title {\n\tmargin: 0 1em 0 0;\n}\n\n.task-count {\n\tmargin: 0;\n\tfont-size: 1rem;\n}\n\n.todo-body {\n\tpadding: var(--spacer);\n\tposition: relative;\n}\n\n.new-task-creator .create {\n\tcolor: var(--clr-primary);\n}\n\n[type='checkbox'] {\n\topacity: 0;\n\tposition: absolute;\n}\n\n.task label {\n\tdisplay: flex-inline;\n\talign-items: center;\n\tposition: relative;\n}\n\n.task {\n\tposition: relative;\n\tmargin-bottom: 1.25em;\n}\n\n.task::after {\n\tcontent: '';\n\tposition: absolute;\n\tright: 0;\n\tleft: 0;\n\tbottom: -0.5em;\n\theight: 1px;\n\tbackground: currentColor;\n\topacity: 0.1;\n}\n\n.custom-checkbox {\n\t--size: 0.75em;\n\tdisplay: inline-block;\n\twidth: var(--size);\n\theight: var(--size);\n\tmargin-right: var(--size);\n\tcursor: pointer;\n\tborder: 2px solid currentColor;\n\tborder-radius: 50%;\n\t-webkit-transform: scale(1);\n\ttransform: scale(1);\n\ttransition: -webkit-transform 300ms ease-in-out;\n\ttransition: transform 300ms ease-in-out;\n\ttransition: transform 300ms ease-in-out, -webkit-transform 300ms ease-in-out;\n}\n\n.task:hover .custom-checkbox,\n[type='checkbox']:focus + label .custom-checkbox {\n\t-webkit-transform: scale(1.2);\n\ttransform: scale(1.2);\n\tcolor: var(--clr-primary);\n}\n\n[type='checkbox']:checked + label .custom-checkbox {\n\tbackground: var(--clr-primary);\n\tborder-color: var(--clr-primary);\n\tbox-shadow: inset 0 0 0px 2px white;\n}\n\n[type='checkbox']:checked + label {\n\topacity: 0.5;\n}\n\n.task label::after {\n\tcontent: '';\n\tposition: absolute;\n\tleft: 0;\n\tright: 0;\n\tleft: 1.5em;\n\ttop: 50%;\n\theight: 3px;\n\tbackground: currentColor;\n\t-webkit-transform: scaleX(0);\n\ttransform: scaleX(0);\n\t-webkit-transform-origin: right;\n\ttransform-origin: right;\n\ttransition: -webkit-transform 150ms ease-in-out;\n\ttransition: transform 150ms ease-in-out;\n\ttransition: transform 150ms ease-in-out, -webkit-transform 150ms ease-in-out;\n}\n\n.date-task {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 80%;\n\ttop: 50%;\n\tcolor: red;\n\tfont-size: 0.75rem;\n}\n\n[type='checkbox']:checked + label::after {\n\t-webkit-transform: scaleX(1);\n\ttransform: scaleX(1);\n\t-webkit-transform-origin: left;\n\ttransform-origin: left;\n}\n\n.delete-stuff {\n\tdisplay: flex;\n\tjustify-content: space-evenly;\n\tposition: absolute;\n\twidth: 100%;\n\tleft: 0;\n\tbottom: -35px;\n\tcolor: var(--clr-dark);\n}\n\n#date-input {\n\t-webkit-align-items: center;\n\tfont-family: 'Montserrat', sans-serif;\n\toverflow: hidden;\n\tpadding: 0;\n\t-webkit-padding-start: 1px;\n\toutline: none;\n\tfont-size: 0.75rem;\n\tbackground-color: var(--clr-light);\n\tborder-color: transparent !important;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');\n\n:root {\n\t--clr-primary: rgb(141, 89, 201);\n\t--clr-light: #f4f4f4;\n\t--clr-dark: #333;\n\t--clr-warning: rgb(99, 36, 36);\n}\n\n*,\n*::before,\n*::after {\n\tfont-family: inherit;\n\tbox-sizing: border-box;\n\tfont-family: 'Montserrat', sans-serif;\n}\n\nbody {\n\tmargin: 0;\n\tfont-family: 'Work Sans', sans-serif;\n\tfont-weight: 300;\n\tfont-size: 1.5rem;\n\tbackground-color: var(--clr-primary);\n\tcolor: var(--clr-light);\n\tdisplay: grid;\n\tgrid:\n\t\t'header header header header' auto '...... lists  active ......' auto/1fr minmax(\n\t\t\t100px,\n\t\t\t300px\n\t\t)\n\t\tminmax(250px, 500px) 1fr;\n}\n\n.title {\n\tgrid-area: header;\n\ttext-align: center;\n\tfont-size: calc(7vw + 2rem);\n\tfont-weight: 900;\n\tcolor: rgba(0, 0, 0, 0.1);\n\tletter-spacing: 2px;\n\tmargin: -0.3em 0 0.5em;\n}\n\n.all-tasks {\n\tgrid-area: lists;\n}\n\n.task-list {\n\tfont-size: 1.2rem;\n\tline-height: 1.7;\n\tlist-style: circle;\n\tpadding-left: 1.1em;\n}\n\n.list-name {\n\tcursor: pointer;\n}\n\n.list-name:hover {\n\topacity: 0.7;\n}\n\nform {\n\tdisplay: flex;\n}\n\n.btn {\n\tcursor: pointer;\n\tbackground: 0;\n\tborder: 0;\n\tpadding: 0;\n\tcolor: inherit;\n}\n\n.btn.create {\n\tfont-size: 1.5rem;\n\tfont-weight: 900;\n\tmargin-right: 0.25em;\n\ttransition: opacity 250ms ease-in;\n}\n\n.btn.create:hover {\n\topacity: 0.7;\n}\n\n.btn.delete {\n\topacity: 0.7;\n\tfont-size: 1rem;\n\ttransition: color 200ms;\n}\n\n.btn.delete:hover {\n\tcolor: var(--clr-warning);\n}\n\n.new {\n\tbackground: transparent;\n\tborder: 0;\n\tcolor: inherit;\n\tborder-bottom: 1px solid currentColor;\n\tfont-size: inherit;\n\toutline: none;\n\tpadding: 0.25em;\n\ttransition: border-bottom 150ms ease-in;\n\torder: 2;\n}\n\n.new::-webkit-input-placeholder {\n\topacity: 0.4;\n}\n\n.new:-ms-input-placeholder {\n\topacity: 0.4;\n}\n\n.new::-ms-input-placeholder {\n\topacity: 0.4;\n}\n\n.new.list::placeholder {\n\tcolor: white;\n}\n.new::placeholder {\n\topacity: 0.4;\n}\n\n.new:focus {\n\tborder-bottom-width: 3px;\n}\n\n.new:focus::-webkit-input-placeholder {\n\topacity: 0.15;\n}\n\n.new:focus:-ms-input-placeholder {\n\topacity: 0.15;\n}\n\n.new:focus::-ms-input-placeholder {\n\topacity: 0.15;\n}\n\n.new:focus::placeholder {\n\topacity: 0.15;\n}\n\n.new.list {\n\tfont-size: 1.1rem;\n}\n\n.new.task {\n\tmargin-bottom: 0;\n}\n\n.active-list {\n\tfont-weight: 700;\n}\n\n.todo-list {\n\t--spacer: 2rem;\n\tgrid-area: active;\n\tbackground: var(--clr-light);\n\tcolor: var(--clr-dark);\n}\n\n.todo-header {\n\tpadding: var(--spacer);\n\tbackground: #e4e4e4;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n}\n\n.list-title {\n\tmargin: 0 1em 0 0;\n}\n\n.task-count {\n\tmargin: 0;\n\tfont-size: 1rem;\n}\n\n.todo-body {\n\tpadding: var(--spacer);\n\tposition: relative;\n}\n\n.new-task-creator .create {\n\tcolor: var(--clr-primary);\n}\n\n[type='checkbox'] {\n\topacity: 0;\n\tposition: absolute;\n}\n\n.task label {\n\tdisplay: flex-inline;\n\talign-items: center;\n\tposition: relative;\n}\n\n.task {\n\tposition: relative;\n\tmargin-bottom: 1.25em;\n}\n\n.task::after {\n\tcontent: '';\n\tposition: absolute;\n\tright: 0;\n\tleft: 0;\n\tbottom: -0.5em;\n\theight: 1px;\n\tbackground: currentColor;\n\topacity: 0.1;\n}\n\n.custom-checkbox {\n\t--size: 0.75em;\n\tdisplay: inline-block;\n\twidth: var(--size);\n\theight: var(--size);\n\tmargin-right: var(--size);\n\tcursor: pointer;\n\tborder: 2px solid currentColor;\n\tborder-radius: 50%;\n\t-webkit-transform: scale(1);\n\ttransform: scale(1);\n\ttransition: -webkit-transform 300ms ease-in-out;\n\ttransition: transform 300ms ease-in-out;\n\ttransition: transform 300ms ease-in-out, -webkit-transform 300ms ease-in-out;\n}\n\n.task:hover .custom-checkbox,\n[type='checkbox']:focus + label .custom-checkbox {\n\t-webkit-transform: scale(1.2);\n\ttransform: scale(1.2);\n\tcolor: var(--clr-primary);\n}\n\n[type='checkbox']:checked + label .custom-checkbox {\n\tbackground: var(--clr-primary);\n\tborder-color: var(--clr-primary);\n\tbox-shadow: inset 0 0 0px 2px white;\n}\n\n[type='checkbox']:checked + label {\n\topacity: 0.5;\n}\n\n.task label::after {\n\tcontent: '';\n\tposition: absolute;\n\tleft: 0;\n\tright: 0;\n\tleft: 1.5em;\n\ttop: 50%;\n\theight: 3px;\n\tbackground: currentColor;\n\t-webkit-transform: scaleX(0);\n\ttransform: scaleX(0);\n\t-webkit-transform-origin: right;\n\ttransform-origin: right;\n\ttransition: -webkit-transform 150ms ease-in-out;\n\ttransition: transform 150ms ease-in-out;\n\ttransition: transform 150ms ease-in-out, -webkit-transform 150ms ease-in-out;\n}\n\n.date-task {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 80%;\n\ttop: 50%;\n\tcolor: red;\n\tfont-size: 0.75rem;\n}\n\n[type='checkbox']:checked + label::after {\n\t-webkit-transform: scaleX(1);\n\ttransform: scaleX(1);\n\t-webkit-transform-origin: left;\n\ttransform-origin: left;\n}\n\n.delete-stuff {\n\tdisplay: flex;\n\tjustify-content: space-evenly;\n\tposition: absolute;\n\twidth: 100%;\n\tleft: 0;\n\tbottom: -35px;\n\tcolor: var(--clr-dark);\n}\n\n#date-input {\n\t-webkit-align-items: center;\n\tfont-family: 'Montserrat', sans-serif;\n\toverflow: hidden;\n\tpadding: 0;\n\t-webkit-padding-start: 1px;\n\toutline: none;\n\tfont-size: 0.75rem;\n\tbackground-color: var(--clr-light);\n\tborder-color: transparent !important;\n}\n"],sourceRoot:""}]);const i=A},645:t=>{t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var e="",r=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),r&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=t(n),r&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(t,e,r,o,a){"string"==typeof t&&(t=[[null,t,void 0]]);var A={};if(r)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(A[s]=!0)}for(var c=0;c<t.length;c++){var l=[].concat(t[c]);r&&A[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},537:t=>{t.exports=function(t){var n=t[1],e=t[3];if(!e)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),A=e.sources.map((function(t){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(t," */")}));return[n].concat(A).concat([a]).join("\n")}return[n].join("\n")}},379:t=>{var n=[];function e(t){for(var e=-1,r=0;r<n.length;r++)if(n[r].identifier===t){e=r;break}return e}function r(t,r){for(var a={},A=[],i=0;i<t.length;i++){var s=t[i],c=r.base?s[0]+r.base:s[0],l=a[c]||0,C="".concat(c," ").concat(l);a[c]=l+1;var d=e(C),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)n[d].references++,n[d].updater(p);else{var u=o(p,r);r.byIndex=i,n.splice(i,0,{identifier:C,updater:u,references:1})}A.push(C)}return A}function o(t,n){var e=n.domAPI(n);return e.update(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap&&n.supports===t.supports&&n.layer===t.layer)return;e.update(t=n)}else e.remove()}}t.exports=function(t,o){var a=r(t=t||[],o=o||{});return function(t){t=t||[];for(var A=0;A<a.length;A++){var i=e(a[A]);n[i].references--}for(var s=r(t,o),c=0;c<a.length;c++){var l=e(a[c]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=s}}},569:t=>{var n={};t.exports=function(t,e){var r=function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}n[t]=e}return n[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}},216:t=>{t.exports=function(t){var n=document.createElement("style");return t.setAttributes(n,t.attributes),t.insert(n,t.options),n}},565:(t,n,e)=>{t.exports=function(t){var n=e.nc;n&&t.setAttribute("nonce",n)}},795:t=>{t.exports=function(t){var n=t.insertStyleElement(t);return{update:function(e){!function(t,n,e){var r="";e.supports&&(r+="@supports (".concat(e.supports,") {")),e.media&&(r+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(r+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),r+=e.css,o&&(r+="}"),e.media&&(r+="}"),e.supports&&(r+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,t,n.options)}(n,t,e)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)}}}},589:t=>{t.exports=function(t,n){if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}}},n={};function e(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return t[r](a,a.exports,e),a.exports}e.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},e.d=(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),(()=>{var t=e(379),n=e.n(t),r=e(795),o=e.n(r),a=e(569),A=e.n(a),i=e(565),s=e.n(i),c=e(216),l=e.n(c),C=e(589),d=e.n(C),p=e(426),u={};u.styleTagTransform=d(),u.setAttributes=s(),u.insert=A().bind(null,"head"),u.domAPI=o(),u.insertStyleElement=l(),n()(p.Z,u),p.Z&&p.Z.locals&&p.Z.locals;const m=document.querySelector("[data-lists]"),f=document.querySelector("[data-new-list-form]"),B=document.querySelector("[data-new-list-input]"),b=document.querySelector("[data-delete-list-button]"),g=document.querySelector("[data-list-display-container]"),h=document.querySelector("[data-list-title]"),k=document.querySelector("[data-list-count]"),y=document.querySelector("[data-tasks]"),v=document.getElementById("task-template"),w=document.querySelector("[data-new-task-form]"),x=document.querySelector("[data-new-task-input]"),E=document.querySelector("[data-clear-complete-tasks-button]"),S="task.lists",z="task.selectedListId";let q,Y=JSON.parse(localStorage.getItem(S))||[],j=localStorage.getItem(z);m.addEventListener("click",(t=>{"li"===t.target.tagName.toLowerCase()&&(j=t.target.dataset.listId,M())})),y.addEventListener("click",(t=>{if("input"===t.target.tagName.toLowerCase()){const n=Y.find((t=>t.id===j));n.tasks.find((n=>n.id===t.target.id)).complete=t.target.checked,T(),I(n)}})),b.addEventListener("click",(t=>{Y=Y.filter((t=>t.id!==j)),j=null,M()})),E.addEventListener("click",(t=>{const n=Y.find((t=>t.id===j));n.tasks=n.tasks.filter((t=>!t.complete)),M()})),f.addEventListener("submit",(t=>{t.preventDefault();const n=B.value;if(null==n||""===n)return;const e=(r=n,{id:Date.now().toString(),name:r,tasks:[]});var r;B.value=null,Y.push(e),M()}));const L=document.querySelector("[data-new-task-date-input]");function T(){localStorage.setItem(S,JSON.stringify(Y)),localStorage.setItem(z,j)}function M(){T(),N()}function N(){W(m),Y.forEach((t=>{const n=document.createElement("li");n.dataset.listId=t.id,n.classList.add("list-name"),n.innerText=t.name,t.id===j&&n.classList.add("active-list"),m.appendChild(n)}));const t=Y.find((t=>t.id===j));null==j?g.style.display="none":(g.style.display="",h.innerText=t.name,I(t),W(y),function(t){t.tasks.forEach((t=>{const n=document.importNode(v.content,!0),e=n.querySelector("input");e.id=t.id,e.checked=t.complete;const r=n.querySelector("label");n.querySelector(".date-task").append(t.taskDate);const o=t.id.replaceAll("-","").toString();n.querySelector("div").classList.add(o),r.htmlFor=t.id,r.append(t.name),y.appendChild(n)}))}(t),function(){let t,n=document.querySelector("div.tasks"),e=[...n.childNodes];for(e.sort((function(t,n){return t.className==n.className?0:t.className>n.className?1:-1})),t=0;t<e.length;++t)n.appendChild(e[t])}())}function I(t){const n=t.tasks.filter((t=>!t.complete)).length,e=1===n?"task":"tasks";k.innerText=`${n} ${e} remaining`}function W(t){for(;t.firstChild;)t.removeChild(t.firstChild)}L.addEventListener("change",(t=>(t.preventDefault,q=L.value,q))),w.addEventListener("submit",(t=>{t.preventDefault();const n=x.value;if(null==n||""===n||null==q||""===q)return;const e=function(t,n){return{id:n.replaceAll("-","").toString(),name:t,taskDate:n,complete:!1}}(n,q);x.value=null,L.value=null,Y.find((t=>t.id===j)).tasks.push(e),M()})),N()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFxQyxJQUF4QkQsRUFBNEIsT0FBUyxRQUN4RDdELEVBQWlCNEMsVUFBWSxHQUFHaUIsS0FBdUJDLGNBa0IzRCxTQUFTdkIsRUFBY25GLEdBQ25CLEtBQU1BLEVBQVFlLFlBQ1ZmLEVBQVFXLFlBQVlYLEVBQVFlLFlBN0hwQ2lFLEVBQVlyQixpQkFBaUIsVUFBVS9ELElBQ2xDQSxFQUFFOEUsZUFDRnJCLEVBQVcyQixFQUFZSixNQUNoQnZCLEtBS1pMLEVBQVlXLGlCQUFpQixVQUFVL0QsSUFDbkNBLEVBQUU4RSxpQkFDRixNQUFNaUMsRUFBVzFELEVBQWEyQixNQUM5QixHQUFnQixNQUFaK0IsR0FBaUMsS0FBYkEsR0FBK0J6SyxNQUFabUgsR0FBc0MsS0FBYkEsRUFBaUIsT0FDckYsTUFBTWUsRUFjVCxTQUFxQlMsRUFBS3hCLEdBQ3ZCLE1BQU8sQ0FBRXRJLEdBQUdzSSxFQUFTMkMsV0FBVyxJQUFJLElBQUk3SyxXQUFZMEosS0FBTUEsRUFBTXhCLFNBQVVBLEVBQVVnQixVQUFVLEdBZmpGdUMsQ0FBV0QsRUFBU3RELEdBQ2pDSixFQUFhMkIsTUFBUSxLQUNyQkksRUFBWUosTUFBUSxLQUNDdEIsRUFBTVksTUFBS2hKLEdBQVFBLEVBQUtILEtBQU8ySSxJQUN2Q1MsTUFBTXRKLEtBQUt1SixHQUN4QkosT0FnSEprQixLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovLy93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly8vd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovLy93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovLy8uL3NyYy9zdHlsZS5jc3M/NzE2MyIsIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Nb250c2VycmF0Oml0YWwsd2dodEAwLDEwMDswLDIwMDswLDMwMDswLDQwMDswLDUwMDswLDYwMDswLDcwMDswLDgwMDswLDkwMDsxLDEwMDsxLDIwMDsxLDMwMDsxLDQwMDsxLDUwMDsxLDYwMDsxLDcwMDsxLDgwMDsxLDkwMCZkaXNwbGF5PXN3YXApO1wiXSk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCI6cm9vdCB7XFxuXFx0LS1jbHItcHJpbWFyeTogcmdiKDE0MSwgODksIDIwMSk7XFxuXFx0LS1jbHItbGlnaHQ6ICNmNGY0ZjQ7XFxuXFx0LS1jbHItZGFyazogIzMzMztcXG5cXHQtLWNsci13YXJuaW5nOiByZ2IoOTksIDM2LCAzNik7XFxufVxcblxcbiosXFxuKjo6YmVmb3JlLFxcbio6OmFmdGVyIHtcXG5cXHRmb250LWZhbWlseTogaW5oZXJpdDtcXG5cXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xcblxcdGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XFxufVxcblxcbmJvZHkge1xcblxcdG1hcmdpbjogMDtcXG5cXHRmb250LWZhbWlseTogJ1dvcmsgU2FucycsIHNhbnMtc2VyaWY7XFxuXFx0Zm9udC13ZWlnaHQ6IDMwMDtcXG5cXHRmb250LXNpemU6IDEuNXJlbTtcXG5cXHRiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jbHItcHJpbWFyeSk7XFxuXFx0Y29sb3I6IHZhcigtLWNsci1saWdodCk7XFxuXFx0ZGlzcGxheTogZ3JpZDtcXG5cXHRncmlkOlxcblxcdFxcdCdoZWFkZXIgaGVhZGVyIGhlYWRlciBoZWFkZXInIGF1dG8gJy4uLi4uLiBsaXN0cyAgYWN0aXZlIC4uLi4uLicgYXV0by8xZnIgbWlubWF4KFxcblxcdFxcdFxcdDEwMHB4LFxcblxcdFxcdFxcdDMwMHB4XFxuXFx0XFx0KVxcblxcdFxcdG1pbm1heCgyNTBweCwgNTAwcHgpIDFmcjtcXG59XFxuXFxuLnRpdGxlIHtcXG5cXHRncmlkLWFyZWE6IGhlYWRlcjtcXG5cXHR0ZXh0LWFsaWduOiBjZW50ZXI7XFxuXFx0Zm9udC1zaXplOiBjYWxjKDd2dyArIDJyZW0pO1xcblxcdGZvbnQtd2VpZ2h0OiA5MDA7XFxuXFx0Y29sb3I6IHJnYmEoMCwgMCwgMCwgMC4xKTtcXG5cXHRsZXR0ZXItc3BhY2luZzogMnB4O1xcblxcdG1hcmdpbjogLTAuM2VtIDAgMC41ZW07XFxufVxcblxcbi5hbGwtdGFza3Mge1xcblxcdGdyaWQtYXJlYTogbGlzdHM7XFxufVxcblxcbi50YXNrLWxpc3Qge1xcblxcdGZvbnQtc2l6ZTogMS4ycmVtO1xcblxcdGxpbmUtaGVpZ2h0OiAxLjc7XFxuXFx0bGlzdC1zdHlsZTogY2lyY2xlO1xcblxcdHBhZGRpbmctbGVmdDogMS4xZW07XFxufVxcblxcbi5saXN0LW5hbWUge1xcblxcdGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLmxpc3QtbmFtZTpob3ZlciB7XFxuXFx0b3BhY2l0eTogMC43O1xcbn1cXG5cXG5mb3JtIHtcXG5cXHRkaXNwbGF5OiBmbGV4O1xcbn1cXG5cXG4uYnRuIHtcXG5cXHRjdXJzb3I6IHBvaW50ZXI7XFxuXFx0YmFja2dyb3VuZDogMDtcXG5cXHRib3JkZXI6IDA7XFxuXFx0cGFkZGluZzogMDtcXG5cXHRjb2xvcjogaW5oZXJpdDtcXG59XFxuXFxuLmJ0bi5jcmVhdGUge1xcblxcdGZvbnQtc2l6ZTogMS41cmVtO1xcblxcdGZvbnQtd2VpZ2h0OiA5MDA7XFxuXFx0bWFyZ2luLXJpZ2h0OiAwLjI1ZW07XFxuXFx0dHJhbnNpdGlvbjogb3BhY2l0eSAyNTBtcyBlYXNlLWluO1xcbn1cXG5cXG4uYnRuLmNyZWF0ZTpob3ZlciB7XFxuXFx0b3BhY2l0eTogMC43O1xcbn1cXG5cXG4uYnRuLmRlbGV0ZSB7XFxuXFx0b3BhY2l0eTogMC43O1xcblxcdGZvbnQtc2l6ZTogMXJlbTtcXG5cXHR0cmFuc2l0aW9uOiBjb2xvciAyMDBtcztcXG59XFxuXFxuLmJ0bi5kZWxldGU6aG92ZXIge1xcblxcdGNvbG9yOiB2YXIoLS1jbHItd2FybmluZyk7XFxufVxcblxcbi5uZXcge1xcblxcdGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xcblxcdGJvcmRlcjogMDtcXG5cXHRjb2xvcjogaW5oZXJpdDtcXG5cXHRib3JkZXItYm90dG9tOiAxcHggc29saWQgY3VycmVudENvbG9yO1xcblxcdGZvbnQtc2l6ZTogaW5oZXJpdDtcXG5cXHRvdXRsaW5lOiBub25lO1xcblxcdHBhZGRpbmc6IDAuMjVlbTtcXG5cXHR0cmFuc2l0aW9uOiBib3JkZXItYm90dG9tIDE1MG1zIGVhc2UtaW47XFxuXFx0b3JkZXI6IDI7XFxufVxcblxcbi5uZXc6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xcblxcdG9wYWNpdHk6IDAuNDtcXG59XFxuXFxuLm5ldzotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xcblxcdG9wYWNpdHk6IDAuNDtcXG59XFxuXFxuLm5ldzo6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcXG5cXHRvcGFjaXR5OiAwLjQ7XFxufVxcblxcbi5uZXcubGlzdDo6cGxhY2Vob2xkZXIge1xcblxcdGNvbG9yOiB3aGl0ZTtcXG59XFxuLm5ldzo6cGxhY2Vob2xkZXIge1xcblxcdG9wYWNpdHk6IDAuNDtcXG59XFxuXFxuLm5ldzpmb2N1cyB7XFxuXFx0Ym9yZGVyLWJvdHRvbS13aWR0aDogM3B4O1xcbn1cXG5cXG4ubmV3OmZvY3VzOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcXG5cXHRvcGFjaXR5OiAwLjE1O1xcbn1cXG5cXG4ubmV3OmZvY3VzOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XFxuXFx0b3BhY2l0eTogMC4xNTtcXG59XFxuXFxuLm5ldzpmb2N1czo6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcXG5cXHRvcGFjaXR5OiAwLjE1O1xcbn1cXG5cXG4ubmV3OmZvY3VzOjpwbGFjZWhvbGRlciB7XFxuXFx0b3BhY2l0eTogMC4xNTtcXG59XFxuXFxuLm5ldy5saXN0IHtcXG5cXHRmb250LXNpemU6IDEuMXJlbTtcXG59XFxuXFxuLm5ldy50YXNrIHtcXG5cXHRtYXJnaW4tYm90dG9tOiAwO1xcbn1cXG5cXG4uYWN0aXZlLWxpc3Qge1xcblxcdGZvbnQtd2VpZ2h0OiA3MDA7XFxufVxcblxcbi50b2RvLWxpc3Qge1xcblxcdC0tc3BhY2VyOiAycmVtO1xcblxcdGdyaWQtYXJlYTogYWN0aXZlO1xcblxcdGJhY2tncm91bmQ6IHZhcigtLWNsci1saWdodCk7XFxuXFx0Y29sb3I6IHZhcigtLWNsci1kYXJrKTtcXG59XFxuXFxuLnRvZG8taGVhZGVyIHtcXG5cXHRwYWRkaW5nOiB2YXIoLS1zcGFjZXIpO1xcblxcdGJhY2tncm91bmQ6ICNlNGU0ZTQ7XFxuXFx0ZGlzcGxheTogZmxleDtcXG5cXHRhbGlnbi1pdGVtczogY2VudGVyO1xcblxcdGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG59XFxuXFxuLmxpc3QtdGl0bGUge1xcblxcdG1hcmdpbjogMCAxZW0gMCAwO1xcbn1cXG5cXG4udGFzay1jb3VudCB7XFxuXFx0bWFyZ2luOiAwO1xcblxcdGZvbnQtc2l6ZTogMXJlbTtcXG59XFxuXFxuLnRvZG8tYm9keSB7XFxuXFx0cGFkZGluZzogdmFyKC0tc3BhY2VyKTtcXG5cXHRwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcblxcbi5uZXctdGFzay1jcmVhdG9yIC5jcmVhdGUge1xcblxcdGNvbG9yOiB2YXIoLS1jbHItcHJpbWFyeSk7XFxufVxcblxcblt0eXBlPSdjaGVja2JveCddIHtcXG5cXHRvcGFjaXR5OiAwO1xcblxcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG59XFxuXFxuLnRhc2sgbGFiZWwge1xcblxcdGRpc3BsYXk6IGZsZXgtaW5saW5lO1xcblxcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuXFx0cG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG5cXG4udGFzayB7XFxuXFx0cG9zaXRpb246IHJlbGF0aXZlO1xcblxcdG1hcmdpbi1ib3R0b206IDEuMjVlbTtcXG59XFxuXFxuLnRhc2s6OmFmdGVyIHtcXG5cXHRjb250ZW50OiAnJztcXG5cXHRwb3NpdGlvbjogYWJzb2x1dGU7XFxuXFx0cmlnaHQ6IDA7XFxuXFx0bGVmdDogMDtcXG5cXHRib3R0b206IC0wLjVlbTtcXG5cXHRoZWlnaHQ6IDFweDtcXG5cXHRiYWNrZ3JvdW5kOiBjdXJyZW50Q29sb3I7XFxuXFx0b3BhY2l0eTogMC4xO1xcbn1cXG5cXG4uY3VzdG9tLWNoZWNrYm94IHtcXG5cXHQtLXNpemU6IDAuNzVlbTtcXG5cXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuXFx0d2lkdGg6IHZhcigtLXNpemUpO1xcblxcdGhlaWdodDogdmFyKC0tc2l6ZSk7XFxuXFx0bWFyZ2luLXJpZ2h0OiB2YXIoLS1zaXplKTtcXG5cXHRjdXJzb3I6IHBvaW50ZXI7XFxuXFx0Ym9yZGVyOiAycHggc29saWQgY3VycmVudENvbG9yO1xcblxcdGJvcmRlci1yYWRpdXM6IDUwJTtcXG5cXHQtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMSk7XFxuXFx0dHJhbnNmb3JtOiBzY2FsZSgxKTtcXG5cXHR0cmFuc2l0aW9uOiAtd2Via2l0LXRyYW5zZm9ybSAzMDBtcyBlYXNlLWluLW91dDtcXG5cXHR0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMzAwbXMgZWFzZS1pbi1vdXQ7XFxuXFx0dHJhbnNpdGlvbjogdHJhbnNmb3JtIDMwMG1zIGVhc2UtaW4tb3V0LCAtd2Via2l0LXRyYW5zZm9ybSAzMDBtcyBlYXNlLWluLW91dDtcXG59XFxuXFxuLnRhc2s6aG92ZXIgLmN1c3RvbS1jaGVja2JveCxcXG5bdHlwZT0nY2hlY2tib3gnXTpmb2N1cyArIGxhYmVsIC5jdXN0b20tY2hlY2tib3gge1xcblxcdC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLjIpO1xcblxcdHRyYW5zZm9ybTogc2NhbGUoMS4yKTtcXG5cXHRjb2xvcjogdmFyKC0tY2xyLXByaW1hcnkpO1xcbn1cXG5cXG5bdHlwZT0nY2hlY2tib3gnXTpjaGVja2VkICsgbGFiZWwgLmN1c3RvbS1jaGVja2JveCB7XFxuXFx0YmFja2dyb3VuZDogdmFyKC0tY2xyLXByaW1hcnkpO1xcblxcdGJvcmRlci1jb2xvcjogdmFyKC0tY2xyLXByaW1hcnkpO1xcblxcdGJveC1zaGFkb3c6IGluc2V0IDAgMCAwcHggMnB4IHdoaXRlO1xcbn1cXG5cXG5bdHlwZT0nY2hlY2tib3gnXTpjaGVja2VkICsgbGFiZWwge1xcblxcdG9wYWNpdHk6IDAuNTtcXG59XFxuXFxuLnRhc2sgbGFiZWw6OmFmdGVyIHtcXG5cXHRjb250ZW50OiAnJztcXG5cXHRwb3NpdGlvbjogYWJzb2x1dGU7XFxuXFx0bGVmdDogMDtcXG5cXHRyaWdodDogMDtcXG5cXHRsZWZ0OiAxLjVlbTtcXG5cXHR0b3A6IDUwJTtcXG5cXHRoZWlnaHQ6IDNweDtcXG5cXHRiYWNrZ3JvdW5kOiBjdXJyZW50Q29sb3I7XFxuXFx0LXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlWCgwKTtcXG5cXHR0cmFuc2Zvcm06IHNjYWxlWCgwKTtcXG5cXHQtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IHJpZ2h0O1xcblxcdHRyYW5zZm9ybS1vcmlnaW46IHJpZ2h0O1xcblxcdHRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDE1MG1zIGVhc2UtaW4tb3V0O1xcblxcdHRyYW5zaXRpb246IHRyYW5zZm9ybSAxNTBtcyBlYXNlLWluLW91dDtcXG5cXHR0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMTUwbXMgZWFzZS1pbi1vdXQsIC13ZWJraXQtdHJhbnNmb3JtIDE1MG1zIGVhc2UtaW4tb3V0O1xcbn1cXG5cXG4uZGF0ZS10YXNrIHtcXG5cXHRwb3NpdGlvbjogYWJzb2x1dGU7XFxuXFx0dG9wOiAwO1xcblxcdGxlZnQ6IDgwJTtcXG5cXHR0b3A6IDUwJTtcXG5cXHRjb2xvcjogcmVkO1xcblxcdGZvbnQtc2l6ZTogMC43NXJlbTtcXG59XFxuXFxuW3R5cGU9J2NoZWNrYm94J106Y2hlY2tlZCArIGxhYmVsOjphZnRlciB7XFxuXFx0LXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlWCgxKTtcXG5cXHR0cmFuc2Zvcm06IHNjYWxlWCgxKTtcXG5cXHQtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IGxlZnQ7XFxuXFx0dHJhbnNmb3JtLW9yaWdpbjogbGVmdDtcXG59XFxuXFxuLmRlbGV0ZS1zdHVmZiB7XFxuXFx0ZGlzcGxheTogZmxleDtcXG5cXHRqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcXG5cXHRwb3NpdGlvbjogYWJzb2x1dGU7XFxuXFx0d2lkdGg6IDEwMCU7XFxuXFx0bGVmdDogMDtcXG5cXHRib3R0b206IC0zNXB4O1xcblxcdGNvbG9yOiB2YXIoLS1jbHItZGFyayk7XFxufVxcblxcbiNkYXRlLWlucHV0IHtcXG5cXHQtd2Via2l0LWFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuXFx0Zm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcXG5cXHRvdmVyZmxvdzogaGlkZGVuO1xcblxcdHBhZGRpbmc6IDA7XFxuXFx0LXdlYmtpdC1wYWRkaW5nLXN0YXJ0OiAxcHg7XFxuXFx0b3V0bGluZTogbm9uZTtcXG5cXHRmb250LXNpemU6IDAuNzVyZW07XFxuXFx0YmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY2xyLWxpZ2h0KTtcXG5cXHRib3JkZXItY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBRUE7Q0FDQyxnQ0FBZ0M7Q0FDaEMsb0JBQW9CO0NBQ3BCLGdCQUFnQjtDQUNoQiw4QkFBOEI7QUFDL0I7O0FBRUE7OztDQUdDLG9CQUFvQjtDQUNwQixzQkFBc0I7Q0FDdEIscUNBQXFDO0FBQ3RDOztB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WCxRQUFRO0NBQ1IsV0FBVztDQUNYLHdCQUF3QjtDQUN4Qiw0QkFBNEI7Q0FDNUIsb0JBQW9CO0NBQ3BCLCtCQUErQjtDQUMvQix1QkFBdUI7Q0FDdkIsK0NBQStDO0NBQy9DLHVDQUF1QztDQUN2Qyw0RUFBNEU7QUFDN0U7O0FBRUE7Q0FDQyxrQkFBa0I7Q0FDbEIsTUFBTTtDQUNOLFNBQVM7Q0FDVCxRQUFRO0NBQ1IsVUFBVTtDQUNWLGtCQUFrQjtBQUNuQjs7QUFFQTtDQUNDLDRCQUE0QjtDQUM1QixvQkFBb0I7Q0FDcEIsOEJBQThCO0NBQzlCLHNCQUFzQjtBQUN2Qjs7QUFFQTtDQUNDLGFBQWE7Q0FDYiw2QkFBNkI7Q0FDN0Isa0JBQWtCO0NBQ2xCLFdBQVc7Q0FDWCxPQUFPO0NBQ1AsYUFBYTtDQUNiLHNCQUFzQjtBQUN2Qjs7QUFFQTtDQUNDLDJCQUEyQjtDQUMzQixxQ0FBcUM7Q0FDckMsZ0JBQWdCO0NBQ2hCLFVBQVU7Q0FDViwwQkFBMEI7Q0FDMUIsYUFBYTtDQUNiLGtCQUFrQjtDQUNsQixrQ0FBa0M7Q0FDbEMsb0NBQW9DO0FBQ3JDXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU1vbnRzZXJyYXQ6aXRhbCx3Z2h0QDAsMTAwOzAsMjAwOzAsMzAwOzAsNDAwOzAsNTAwOzAsNjAwOzAsNzAwOzAsODAwOzAsOTAwOzEsMTAwOzEsMjAwOzEsMzAwOzEsNDAwOzEsNTAwOzEsNjAwOzEsNzAwOzEsODAwOzEsOTAwJmRpc3BsYXk9c3dhcCcpO1xcblxcbjpyb290IHtcXG5cXHQtLWNsci1wcmltYXJ5OiByZ2IoMTQxLCA4OSwgMjAxKTtcXG5cXHQtLWNsci1saWdodDogI2Y0ZjRmNDtcXG5cXHQtLWNsci1kYXJrOiAjMzMzO1xcblxcdC0tY2xyLXdhcm5pbmc6IHJnYig5OSwgMzYsIDM2KTtcXG59XFxuXFxuKixcXG4qOjpiZWZvcmUsXFxuKjo6YWZ0ZXIge1xcblxcdGZvbnQtZmFtaWx5OiBpbmhlcml0O1xcblxcdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuXFx0Zm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcXG59XFxuXFxuYm9keSB7XFxuXFx0bWFyZ2luOiAwO1xcblxcdGZvbnQtZmFtaWx5OiAnV29yayBTYW5zJywgc2Fucy1zZXJpZjtcXG5cXHRmb250LXdlaWdodDogMzAwO1xcblxcdGZvbnQtc2l6ZTogMS41cmVtO1xcblxcdGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNsci1wcmltYXJ5KTtcXG5cXHRjb2xvcjogdmFyKC0tY2xyLWxpZ2h0KTtcXG5cXHRkaXNwbGF5OiBncmlkO1xcblxcdGdyaWQ6XFxuXFx0XFx0J2hlYWRlciBoZWFkZXIgaGVhZGVyIGhlYWRlcicgYXV0byAnLi4uLi4uIGxpc3RzICBhY3RpdmUgLi4uLi4uJyBhdXRvLzFmciBtaW5tYXgoXFxuXFx0XFx0XFx0MTAwcHgsXFxuXFx0XFx0XFx0MzAwcHhcXG5cXHRcXHQpXFxuXFx0XFx0bWlubWF4KDI1MHB4LCA1MDBweCkgMWZyO1xcbn1cXG5cXG4udGl0bGUge1xcblxcdGdyaWQtYXJlYTogaGVhZGVyO1xcblxcdHRleHQtYWxpZ246IGNlbnRlcjtcXG5cXHRmb250LXNpemU6IGNhbGMoN3Z3ICsgMnJlbSk7XFxuXFx0Zm9udC13ZWlnaHQ6IDkwMDtcXG5cXHRjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjEpO1xcblxcdGxldHRlci1zcGFjaW5nOiAycHg7XFxuXFx0bWFyZ2luOiAtMC4zZW0gMCAwLjVlbTtcXG59XFxuXFxuLmFsbC10YXNrcyB7XFxuXFx0Z3JpZC1hcmVhOiBsaXN0cztcXG59XFxuXFxuLnRhc2stbGlzdCB7XFxuXFx0Zm9udC1zaXplOiAxLjJyZW07XFxuXFx0bGluZS1oZWlnaHQ6IDEuNztcXG5cXHRsaXN0LXN0eWxlOiBjaXJjbGU7XFxuXFx0cGFkZGluZy1sZWZ0OiAxLjFlbTtcXG59XFxuXFxuLmxpc3QtbmFtZSB7XFxuXFx0Y3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4ubGlzdC1uYW1lOmhvdmVyIHtcXG5cXHRvcGFjaXR5OiAwLjc7XFxufVxcblxcbmZvcm0ge1xcblxcdGRpc3BsYXk6IGZsZXg7XFxufVxcblxcbi5idG4ge1xcblxcdGN1cnNvcjogcG9pbnRlcjtcXG5cXHRiYWNrZ3JvdW5kOiAwO1xcblxcdGJvcmRlcjogMDtcXG5cXHRwYWRkaW5nOiAwO1xcblxcdGNvbG9yOiBpbmhlcml0O1xcbn1cXG5cXG4uYnRuLmNyZWF0ZSB7XFxuXFx0Zm9udC1zaXplOiAxLjVyZW07XFxuXFx0Zm9udC13ZWlnaHQ6IDkwMDtcXG5cXHRtYXJnaW4tcmlnaHQ6IDAuMjVlbTtcXG5cXHR0cmFuc2l0aW9uOiBvcGFjaXR5IDI1MG1zIGVhc2UtaW47XFxufVxcblxcbi5idG4uY3JlYXRlOmhvdmVyIHtcXG5cXHRvcGFjaXR5OiAwLjc7XFxufVxcblxcbi5idG4uZGVsZXRlIHtcXG5cXHRvcGFjaXR5OiAwLjc7XFxuXFx0Zm9udC1zaXplOiAxcmVtO1xcblxcdHRyYW5zaXRpb246IGNvbG9yIDIwMG1zO1xcbn1cXG5cXG4uYnRuLmRlbGV0ZTpob3ZlciB7XFxuXFx0Y29sb3I6IHZhcigtLWNsci13YXJuaW5nKTtcXG59XFxuXFxuLm5ldyB7XFxuXFx0YmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XFxuXFx0Ym9yZGVyOiAwO1xcblxcdGNvbG9yOiBpbmhlcml0O1xcblxcdGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBjdXJyZW50Q29sb3I7XFxuXFx0Zm9udC1zaXplOiBpbmhlcml0O1xcblxcdG91dGxpbmU6IG5vbmU7XFxuXFx0cGFkZGluZzogMC4yNWVtO1xcblxcdHRyYW5zaXRpb246IGJvcmRlci1ib3R0b20gMTUwbXMgZWFzZS1pbjtcXG5cXHRvcmRlcjogMjtcXG59XFxuXFxuLm5ldzo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XFxuXFx0b3BhY2l0eTogMC40O1xcbn1cXG5cXG4ubmV3Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XFxuXFx0b3BhY2l0eTogMC40O1xcbn1cXG5cXG4ubmV3OjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xcblxcdG9wYWNpdHk6IDAuNDtcXG59XFxuXFxuLm5ldy5saXN0OjpwbGFjZWhvbGRlciB7XFxuXFx0Y29sb3I6IHdoaXRlO1xcbn1cXG4ubmV3OjpwbGFjZWhvbGRlciB7XFxuXFx0b3BhY2l0eTogMC40O1xcbn1cXG5cXG4ubmV3OmZvY3VzIHtcXG5cXHRib3JkZXItYm90dG9tLXdpZHRoOiAzcHg7XFxufVxcblxcbi5uZXc6Zm9jdXM6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xcblxcdG9wYWNpdHk6IDAuMTU7XFxufVxcblxcbi5uZXc6Zm9jdXM6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcXG5cXHRvcGFjaXR5OiAwLjE1O1xcbn1cXG5cXG4ubmV3OmZvY3VzOjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xcblxcdG9wYWNpdHk6IDAuMTU7XFxufVxcblxcbi5uZXc6Zm9jdXM6OnBsYWNlaG9sZGVyIHtcXG5cXHRvcGFjaXR5OiAwLjE1O1xcbn1cXG5cXG4ubmV3Lmxpc3Qge1xcblxcdGZvbnQtc2l6ZTogMS4xcmVtO1xcbn1cXG5cXG4ubmV3LnRhc2sge1xcblxcdG1hcmdpbi1ib3R0b206IDA7XFxufVxcblxcbi5hY3RpdmUtbGlzdCB7XFxuXFx0Zm9udC13ZWlnaHQ6IDcwMDtcXG59XFxuXFxuLnRvZG8tbGlzdCB7XFxuXFx0LS1zcGFjZXI6IDJyZW07XFxuXFx0Z3JpZC1hcmVhOiBhY3RpdmU7XFxuXFx0YmFja2dyb3VuZDogdmFyKC0tY2xyLWxpZ2h0KTtcXG5cXHRjb2xvcjogdmFyKC0tY2xyLWRhcmspO1xcbn1cXG5cXG4udG9kby1oZWFkZXIge1xcblxcdHBhZGRpbmc6IHZhcigtLXNwYWNlcik7XFxuXFx0YmFja2dyb3VuZDogI2U0ZTRlNDtcXG5cXHRkaXNwbGF5OiBmbGV4O1xcblxcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuXFx0anVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbn1cXG5cXG4ubGlzdC10aXRsZSB7XFxuXFx0bWFyZ2luOiAwIDFlbSAwIDA7XFxufVxcblxcbi50YXNrLWNvdW50IHtcXG5cXHRtYXJnaW46IDA7XFxuXFx0Zm9udC1zaXplOiAxcmVtO1xcbn1cXG5cXG4udG9kby1ib2R5IHtcXG5cXHRwYWRkaW5nOiB2YXIoLS1zcGFjZXIpO1xcblxcdHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuXFxuLm5ldy10YXNrLWNyZWF0b3IgLmNyZWF0ZSB7XFxuXFx0Y29sb3I6IHZhcigtLWNsci1wcmltYXJ5KTtcXG59XFxuXFxuW3R5cGU9J2NoZWNrYm94J10ge1xcblxcdG9wYWNpdHk6IDA7XFxuXFx0cG9zaXRpb246IGFic29sdXRlO1xcbn1cXG5cXG4udGFzayBsYWJlbCB7XFxuXFx0ZGlzcGxheTogZmxleC1pbmxpbmU7XFxuXFx0YWxpZ24taXRlbXM6IGNlbnRlcjtcXG5cXHRwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcblxcbi50YXNrIHtcXG5cXHRwb3NpdGlvbjogcmVsYXRpdmU7XFxuXFx0bWFyZ2luLWJvdHRvbTogMS4yNWVtO1xcbn1cXG5cXG4udGFzazo6YWZ0ZXIge1xcblxcdGNvbnRlbnQ6ICcnO1xcblxcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG5cXHRyaWdodDogMDtcXG5cXHRsZWZ0OiAwO1xcblxcdGJvdHRvbTogLTAuNWVtO1xcblxcdGhlaWdodDogMXB4O1xcblxcdGJhY2tncm91bmQ6IGN1cnJlbnRDb2xvcjtcXG5cXHRvcGFjaXR5OiAwLjE7XFxufVxcblxcbi5jdXN0b20tY2hlY2tib3gge1xcblxcdC0tc2l6ZTogMC43NWVtO1xcblxcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG5cXHR3aWR0aDogdmFyKC0tc2l6ZSk7XFxuXFx0aGVpZ2h0OiB2YXIoLS1zaXplKTtcXG5cXHRtYXJnaW4tcmlnaHQ6IHZhcigtLXNpemUpO1xcblxcdGN1cnNvcjogcG9pbnRlcjtcXG5cXHRib3JkZXI6IDJweCBzb2xpZCBjdXJyZW50Q29sb3I7XFxuXFx0Ym9yZGVyLXJhZGl1czogNTAlO1xcblxcdC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxKTtcXG5cXHR0cmFuc2Zvcm06IHNjYWxlKDEpO1xcblxcdHRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDMwMG1zIGVhc2UtaW4tb3V0O1xcblxcdHRyYW5zaXRpb246IHRyYW5zZm9ybSAzMDBtcyBlYXNlLWluLW91dDtcXG5cXHR0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMzAwbXMgZWFzZS1pbi1vdXQsIC13ZWJraXQtdHJhbnNmb3JtIDMwMG1zIGVhc2UtaW4tb3V0O1xcbn1cXG5cXG4udGFzazpob3ZlciAuY3VzdG9tLWNoZWNrYm94LFxcblt0eXBlPSdjaGVja2JveCddOmZvY3VzICsgbGFiZWwgLmN1c3RvbS1jaGVja2JveCB7XFxuXFx0LXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEuMik7XFxuXFx0dHJhbnNmb3JtOiBzY2FsZSgxLjIpO1xcblxcdGNvbG9yOiB2YXIoLS1jbHItcHJpbWFyeSk7XFxufVxcblxcblt0eXBlPSdjaGVja2JveCddOmNoZWNrZWQgKyBsYWJlbCAuY3VzdG9tLWNoZWNrYm94IHtcXG5cXHRiYWNrZ3JvdW5kOiB2YXIoLS1jbHItcHJpbWFyeSk7XFxuXFx0Ym9yZGVyLWNvbG9yOiB2YXIoLS1jbHItcHJpbWFyeSk7XFxuXFx0Ym94LXNoYWRvdzogaW5zZXQgMCAwIDBweCAycHggd2hpdGU7XFxufVxcblxcblt0eXBlPSdjaGVja2JveCddOmNoZWNrZWQgKyBsYWJlbCB7XFxuXFx0b3BhY2l0eTogMC41O1xcbn1cXG5cXG4udGFzayBsYWJlbDo6YWZ0ZXIge1xcblxcdGNvbnRlbnQ6ICcnO1xcblxcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG5cXHRsZWZ0OiAwO1xcblxcdHJpZ2h0OiAwO1xcblxcdGxlZnQ6IDEuNWVtO1xcblxcdHRvcDogNTAlO1xcblxcdGhlaWdodDogM3B4O1xcblxcdGJhY2tncm91bmQ6IGN1cnJlbnRDb2xvcjtcXG5cXHQtd2Via2l0LXRyYW5zZm9ybTogc2NhbGVYKDApO1xcblxcdHRyYW5zZm9ybTogc2NhbGVYKDApO1xcblxcdC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogcmlnaHQ7XFxuXFx0dHJhbnNmb3JtLW9yaWdpbjogcmlnaHQ7XFxuXFx0dHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gMTUwbXMgZWFzZS1pbi1vdXQ7XFxuXFx0dHJhbnNpdGlvbjogdHJhbnNmb3JtIDE1MG1zIGVhc2UtaW4tb3V0O1xcblxcdHRyYW5zaXRpb246IHRyYW5zZm9ybSAxNTBtcyBlYXNlLWluLW91dCwgLXdlYmtpdC10cmFuc2Zvcm0gMTUwbXMgZWFzZS1pbi1vdXQ7XFxufVxcblxcbi5kYXRlLXRhc2sge1xcblxcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG5cXHR0b3A6IDA7XFxuXFx0bGVmdDogODAlO1xcblxcdHRvcDogNTAlO1xcblxcdGNvbG9yOiByZWQ7XFxuXFx0Zm9udC1zaXplOiAwLjc1cmVtO1xcbn1cXG5cXG5bdHlwZT0nY2hlY2tib3gnXTpjaGVja2VkICsgbGFiZWw6OmFmdGVyIHtcXG5cXHQtd2Via2l0LXRyYW5zZm9ybTogc2NhbGVYKDEpO1xcblxcdHRyYW5zZm9ybTogc2NhbGVYKDEpO1xcblxcdC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogbGVmdDtcXG5cXHR0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0O1xcbn1cXG5cXG4uZGVsZXRlLXN0dWZmIHtcXG5cXHRkaXNwbGF5OiBmbGV4O1xcblxcdGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xcblxcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG5cXHR3aWR0aDogMTAwJTtcXG5cXHRsZWZ0OiAwO1xcblxcdGJvdHRvbTogLTM1cHg7XFxuXFx0Y29sb3I6IHZhcigtLWNsci1kYXJrKTtcXG59XFxuXFxuI2RhdGUtaW5wdXQge1xcblxcdC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcXG5cXHRmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCBzYW5zLXNlcmlmO1xcblxcdG92ZXJmbG93OiBoaWRkZW47XFxuXFx0cGFkZGluZzogMDtcXG5cXHQtd2Via2l0LXBhZGRpbmctc3RhcnQ6IDFweDtcXG5cXHRvdXRsaW5lOiBub25lO1xcblxcdGZvbnQtc2l6ZTogMC43NXJlbTtcXG5cXHRiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jbHItbGlnaHQpO1xcblxcdGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0ICcuL3N0eWxlLmNzcyc7XG5cbmNvbnN0IGxpc3RzQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtbGlzdHNdJylcbmNvbnN0IG5ld0xpc3RGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtbmV3LWxpc3QtZm9ybV0nKVxuY29uc3QgbmV3TGlzdElucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtbmV3LWxpc3QtaW5wdXRdJylcbmNvbnN0IGRlbGV0ZUxpc3RCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1kZWxldGUtbGlzdC1idXR0b25dJylcbmNvbnN0IGxpc3REaXNwbGF5Q29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtbGlzdC1kaXNwbGF5LWNvbnRhaW5lcl0nKVxuY29uc3QgbGlzdFRpdGxlRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWxpc3QtdGl0bGVdJylcbmNvbnN0IGxpc3RDb3VudEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1saXN0LWNvdW50XScpXG5jb25zdCB0YXNrQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtdGFza3NdJylcbmNvbnN0IHRhc2tUZW1wbGF0ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXNrLXRlbXBsYXRlJylcbmNvbnN0IG5ld1Rhc2tGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtbmV3LXRhc2stZm9ybV0nKVxuY29uc3QgbmV3VGFza0lucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtbmV3LXRhc2staW5wdXRdJylcbmNvbnN0IGNsZWFyQ29tcGxldGVUYXNrQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtY2xlYXItY29tcGxldGUtdGFza3MtYnV0dG9uXScpXG5cblxuY29uc3QgTE9DQUxfU1RPUkFHRV9MSVNUX0tFWSA9ICd0YXNrLmxpc3RzJ1xuY29uc3QgTE9DQUxfU1RPUkFHRV9TRUxFQ1RFRF9MSVNUX0lEX0tFWSA9ICd0YXNrLnNlbGVjdGVkTGlzdElkJ1xubGV0IGxpc3RzID0gIEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oTE9DQUxfU1RPUkFHRV9MSVNUX0tFWSkpIHx8IFtdXG5sZXQgc2VsZWN0ZWRMaXN0SWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShMT0NBTF9TVE9SQUdFX1NFTEVDVEVEX0xJU1RfSURfS0VZKVxubGV0IHRhc2tEYXRlIFxuXG5cblxubGlzdHNDb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snICwgZSA9PiB7XG4gICAgaWYgKGUudGFyZ2V0LnRhZ05hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJsaVwiKSB7XG4gICAgICAgIHNlbGVjdGVkTGlzdElkID0gZS50YXJnZXQuZGF0YXNldC5saXN0SWRcbiAgICAgICAgc2F2ZUFuZFJlbmRlcigpXG4gICAgfVxufSlcblxudGFza0NvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4ge1xuICAgIGlmIChlLnRhcmdldC50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT09ICdpbnB1dCcpIHtcbiAgICAgIGNvbnN0IHNlbGVjdGVkTGlzdCA9IGxpc3RzLmZpbmQobGlzdCA9PiBsaXN0LmlkID09PSBzZWxlY3RlZExpc3RJZClcbiAgICAgIGNvbnN0IHNlbGVjdGVkVGFzayA9IHNlbGVjdGVkTGlzdC50YXNrcy5maW5kKHRhc2sgPT4gdGFzay5pZCA9PT0gZS50YXJnZXQuaWQpXG4gICAgICBzZWxlY3RlZFRhc2suY29tcGxldGUgPSBlLnRhcmdldC5jaGVja2VkXG4gICAgICBzYXZlKClcbiAgICAgIHJlbmRlclRhc2tDb3VudChzZWxlY3RlZExpc3QpXG4gICAgfVxuICB9KVxuXG5cblxuZGVsZXRlTGlzdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4ge1xuICAgIGxpc3RzID0gbGlzdHMuZmlsdGVyKGxpc3QgPT4gbGlzdC5pZCAhPT0gc2VsZWN0ZWRMaXN0SWQpXG4gICAgc2VsZWN0ZWRMaXN0SWQgPSBudWxsXG4gICAgc2F2ZUFuZFJlbmRlcigpO1xufSlcblxuY2xlYXJDb21wbGV0ZVRhc2tCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlID0+IHtcbiAgICBjb25zdCBzZWxlY3RlZExpc3QgPSBsaXN0cy5maW5kKGxpc3QgPT4gbGlzdC5pZCA9PT0gc2VsZWN0ZWRMaXN0SWQpXG4gICAgc2VsZWN0ZWRMaXN0LnRhc2tzID0gc2VsZWN0ZWRMaXN0LnRhc2tzLmZpbHRlcih0YXNrID0+ICF0YXNrLmNvbXBsZXRlKVxuICAgIHNhdmVBbmRSZW5kZXIoKTtcbn0pXG5cblxuXG5uZXdMaXN0Rm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCBlID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3QgbGlzdE5hbWUgPSBuZXdMaXN0SW5wdXQudmFsdWVcbiAgICBpZiAobGlzdE5hbWUgPT0gbnVsbCB8fCBsaXN0TmFtZSA9PT0gXCJcIikgcmV0dXJuXG4gICAgY29uc3QgbGlzdCA9IGNyZWF0ZUxpc3QobGlzdE5hbWUpXG4gICAgbmV3TGlzdElucHV0LnZhbHVlID0gbnVsbFxuICAgIGxpc3RzLnB1c2gobGlzdClcbiAgICBzYXZlQW5kUmVuZGVyKClcbiB9KVxuXG5cbmNvbnN0IGdldFRhc2tEYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIltkYXRhLW5ldy10YXNrLWRhdGUtaW5wdXRdXCIpXG5cblxuZ2V0VGFza0RhdGUuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgZSA9PiB7XG4gICAgIGUucHJldmVudERlZmF1bHRcbiAgICAgdGFza0RhdGUgPSBnZXRUYXNrRGF0ZS52YWx1ZVxuICAgICByZXR1cm4gdGFza0RhdGVcbiAgICAgXG59KVxuXG5cbm5ld1Rhc2tGb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIGUgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCB0YXNrTmFtZSA9IG5ld1Rhc2tJbnB1dC52YWx1ZVxuICAgIGlmICh0YXNrTmFtZSA9PSBudWxsIHx8IHRhc2tOYW1lID09PSBcIlwiIHx8IHRhc2tEYXRlID09IHVuZGVmaW5lZCB8fCB0YXNrRGF0ZSA9PT0gXCJcIikgcmV0dXJuXG4gICAgY29uc3QgdGFzayA9IGNyZWF0ZVRhc2sodGFza05hbWUsdGFza0RhdGUpXG4gICAgbmV3VGFza0lucHV0LnZhbHVlID0gbnVsbFxuICAgIGdldFRhc2tEYXRlLnZhbHVlID0gbnVsbFxuICAgIGNvbnN0IHNlbGVjdGVkTGlzdCA9IGxpc3RzLmZpbmQobGlzdCA9PiBsaXN0LmlkID09PSBzZWxlY3RlZExpc3RJZClcbiAgICBzZWxlY3RlZExpc3QudGFza3MucHVzaCh0YXNrKVxuICAgIHNhdmVBbmRSZW5kZXIoKVxuXG4gfSlcblxuXG5mdW5jdGlvbiBjcmVhdGVMaXN0KG5hbWUpIHtcbiAgICAgcmV0dXJuIHsgaWQ6RGF0ZS5ub3coKS50b1N0cmluZygpLCBuYW1lOiBuYW1lLCB0YXNrczogW10gfVxuIH1cblxuIGZ1bmN0aW9uIGNyZWF0ZVRhc2sgKG5hbWUsdGFza0RhdGUpIHtcbiAgICByZXR1cm4geyBpZDp0YXNrRGF0ZS5yZXBsYWNlQWxsKCctJywnJykudG9TdHJpbmcoKSwgbmFtZTogbmFtZSwgdGFza0RhdGU6IHRhc2tEYXRlLCBjb21wbGV0ZTogZmFsc2UgfVxuIH1cbiBcbmZ1bmN0aW9uIHNhdmUgKCkge1xuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKExPQ0FMX1NUT1JBR0VfTElTVF9LRVksIEpTT04uc3RyaW5naWZ5KGxpc3RzKSlcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShMT0NBTF9TVE9SQUdFX1NFTEVDVEVEX0xJU1RfSURfS0VZLCBzZWxlY3RlZExpc3RJZClcbn1cblxuZnVuY3Rpb24gc2F2ZUFuZFJlbmRlcigpIHtcbiAgICBzYXZlKClcbiAgICByZW5kZXIoKTtcbn1cblxuXG5mdW5jdGlvbiByZW5kZXIoKXtcbiAgICBjbGVhckVsZW1lbnQobGlzdHNDb250YWluZXIpXG4gICAgcmVuZGVyTGlzdHMoKTtcbiAgICBjb25zdCBzZWxlY3RlZExpc3QgPSBsaXN0cy5maW5kKGxpc3QgPT4gbGlzdC5pZCA9PT0gc2VsZWN0ZWRMaXN0SWQpXG5cbiAgICBpZiAoc2VsZWN0ZWRMaXN0SWQgPT0gbnVsbCkge1xuICAgIGxpc3REaXNwbGF5Q29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIlxuICAgIH0gZWxzZSB7XG4gICAgICAgIGxpc3REaXNwbGF5Q29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAnJ1xuICAgICAgICBsaXN0VGl0bGVFbGVtZW50LmlubmVyVGV4dCA9IHNlbGVjdGVkTGlzdC5uYW1lXG4gICAgICAgIHJlbmRlclRhc2tDb3VudChzZWxlY3RlZExpc3QpXG4gICAgICAgIGNsZWFyRWxlbWVudCh0YXNrQ29udGFpbmVyKVxuICAgICAgICByZW5kZXJUYXNrcyhzZWxlY3RlZExpc3QpXG4gICAgICAgIHNvcnRUYXNrcygpO1xuICAgIFxuICAgIH1cbn1cblxuZnVuY3Rpb24gcmVuZGVyVGFza3Moc2VsZWN0ZWRMaXN0KSB7XG4gICAgc2VsZWN0ZWRMaXN0LnRhc2tzLmZvckVhY2godGFzayA9PiB7XG4gICAgICAgIGNvbnN0IHRhc2tFbGVtZW50ID0gZG9jdW1lbnQuaW1wb3J0Tm9kZSh0YXNrVGVtcGxhdGUuY29udGVudCwgdHJ1ZSlcbiAgICAgICAgY29uc3QgY2hlY2tib3ggPSB0YXNrRWxlbWVudC5xdWVyeVNlbGVjdG9yKCdpbnB1dCcpXG4gICAgICAgIGNoZWNrYm94LmlkID0gdGFzay5pZFxuICAgICAgICBjaGVja2JveC5jaGVja2VkID0gdGFzay5jb21wbGV0ZVxuICAgICAgICBjb25zdCBsYWJlbCA9IHRhc2tFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ2xhYmVsJylcbiAgICAgICAgY29uc3QgZGF0ZSA9IHRhc2tFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5kYXRlLXRhc2snKVxuICAgICAgICBkYXRlLmFwcGVuZCh0YXNrLnRhc2tEYXRlKVxuXG4gICAgICAgIGNvbnN0IG5hbWVJZCA9IHRhc2suaWQucmVwbGFjZUFsbCgnLScsJycpLnRvU3RyaW5nKClcbiAgICAgICAgdGFza0VsZW1lbnQucXVlcnlTZWxlY3RvcignZGl2JykuY2xhc3NMaXN0LmFkZChuYW1lSWQpXG5cbiAgICAgICAgbGFiZWwuaHRtbEZvciA9IHRhc2suaWRcbiAgICAgICAgbGFiZWwuYXBwZW5kKHRhc2submFtZSlcblxuXG4gICAgICAgIHRhc2tDb250YWluZXIuYXBwZW5kQ2hpbGQodGFza0VsZW1lbnQpXG4gICAgfSlcbiAgICBcbn1cblxuZnVuY3Rpb24gc29ydFRhc2tzICgpIHtcbiAgICBsZXQgdGFza3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiZGl2LnRhc2tzXCIpXG4gICAgbGV0IHRhc2sgPSB0YXNrcy5jaGlsZE5vZGVzO1xuICAgIGxldCB0YXNrQXJyID0gWy4uLnRhc2tdXG4gICAgbGV0IGk7XG4gICAgXG5cbiAgICB0YXNrQXJyLnNvcnQoZnVuY3Rpb24oYSwgYikge1xuICAgICAgICByZXR1cm4gYS5jbGFzc05hbWUgPT0gYi5jbGFzc05hbWVcbiAgICAgICAgICAgICAgICA/IDBcbiAgICAgICAgICAgICAgICA6IChhLmNsYXNzTmFtZSA+IGIuY2xhc3NOYW1lID8gMSA6IC0xKTtcbiAgICAgIH0pO1xuXG4gICAgICBmb3IgKGkgPSAwOyBpIDwgdGFza0Fyci5sZW5ndGg7ICsraSkge1xuICAgICAgICB0YXNrcy5hcHBlbmRDaGlsZCh0YXNrQXJyW2ldKTtcbiAgICAgIH1cbiAgICBcbiAgICBcbn1cbiBcblxuZnVuY3Rpb24gcmVuZGVyVGFza0NvdW50IChzZWxlY3RlZExpc3QpIHtcbiAgICBjb25zdCBpbmNvbXBsZXRlVGFza0NvdW50ID0gc2VsZWN0ZWRMaXN0LnRhc2tzLmZpbHRlcih0YXNrID0+ICF0YXNrLmNvbXBsZXRlKS5sZW5ndGhcbiAgICBjb25zdCB0YXNrU3RyaW5nID0gaW5jb21wbGV0ZVRhc2tDb3VudCA9PT0gMSA/IFwidGFza1wiIDogXCJ0YXNrc1wiXG4gICAgbGlzdENvdW50RWxlbWVudC5pbm5lclRleHQgPSBgJHtpbmNvbXBsZXRlVGFza0NvdW50fSAke3Rhc2tTdHJpbmd9IHJlbWFpbmluZ2BcblxufVxuXG5cbmZ1bmN0aW9uIHJlbmRlckxpc3RzICgpIHtcbiAgICBsaXN0cy5mb3JFYWNoKGxpc3QgPT4ge1xuICAgICAgICBjb25zdCBsaXN0RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJylcbiAgICAgICAgbGlzdEVsZW1lbnQuZGF0YXNldC5saXN0SWQgPSBsaXN0LmlkXG4gICAgICAgIGxpc3RFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJsaXN0LW5hbWVcIilcbiAgICAgICAgbGlzdEVsZW1lbnQuaW5uZXJUZXh0ID0gbGlzdC5uYW1lXG4gICAgICAgIGlmKGxpc3QuaWQgPT09IHNlbGVjdGVkTGlzdElkKSB7XG4gICAgICAgICAgICBsaXN0RWxlbWVudC5jbGFzc0xpc3QuYWRkKCdhY3RpdmUtbGlzdCcpXG4gICAgICAgIH1cbiAgICAgICAgbGlzdHNDb250YWluZXIuYXBwZW5kQ2hpbGQobGlzdEVsZW1lbnQpXG4gICAgfSlcbn1cblxuZnVuY3Rpb24gY2xlYXJFbGVtZW50IChlbGVtZW50KSB7XG4gICAgd2hpbGUoZWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICAgIGVsZW1lbnQucmVtb3ZlQ2hpbGQoZWxlbWVudC5maXJzdENoaWxkKVxuICAgIH1cbn1cblxucmVuZGVyKCk7XG5cblxuXG5cblxuXG5cblxuXG5cbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwibGlzdHNDb250YWluZXIiLCJuZXdMaXN0Rm9ybSIsIm5ld0xpc3RJbnB1dCIsImRlbGV0ZUxpc3RCdXR0b24iLCJsaXN0RGlzcGxheUNvbnRhaW5lciIsImxpc3RUaXRsZUVsZW1lbnQiLCJsaXN0Q291bnRFbGVtZW50IiwidGFza0NvbnRhaW5lciIsInRhc2tUZW1wbGF0ZSIsImdldEVsZW1lbnRCeUlkIiwibmV3VGFza0Zvcm0iLCJuZXdUYXNrSW5wdXQiLCJjbGVhckNvbXBsZXRlVGFza0J1dHRvbiIsIkxPQ0FMX1NUT1JBR0VfTElTVF9LRVkiLCJMT0NBTF9TVE9SQUdFX1NFTEVDVEVEX0xJU1RfSURfS0VZIiwidGFza0RhdGUiLCJsaXN0cyIsInBhcnNlIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInNlbGVjdGVkTGlzdElkIiwiYWRkRXZlbnRMaXN0ZW5lciIsInRhZ05hbWUiLCJ0b0xvd2VyQ2FzZSIsImRhdGFzZXQiLCJsaXN0SWQiLCJzYXZlQW5kUmVuZGVyIiwic2VsZWN0ZWRMaXN0IiwiZmluZCIsInRhc2tzIiwidGFzayIsImNvbXBsZXRlIiwiY2hlY2tlZCIsInNhdmUiLCJyZW5kZXJUYXNrQ291bnQiLCJmaWx0ZXIiLCJwcmV2ZW50RGVmYXVsdCIsImxpc3ROYW1lIiwidmFsdWUiLCJuYW1lIiwiRGF0ZSIsIm5vdyIsImdldFRhc2tEYXRlIiwic2V0SXRlbSIsInJlbmRlciIsImNsZWFyRWxlbWVudCIsImZvckVhY2giLCJsaXN0RWxlbWVudCIsImNsYXNzTGlzdCIsImFkZCIsImlubmVyVGV4dCIsImRpc3BsYXkiLCJ0YXNrRWxlbWVudCIsImltcG9ydE5vZGUiLCJjaGVja2JveCIsImxhYmVsIiwiYXBwZW5kIiwibmFtZUlkIiwicmVwbGFjZUFsbCIsImh0bWxGb3IiLCJyZW5kZXJUYXNrcyIsInRhc2tBcnIiLCJjaGlsZE5vZGVzIiwic29ydCIsImIiLCJjbGFzc05hbWUiLCJzb3J0VGFza3MiLCJpbmNvbXBsZXRlVGFza0NvdW50IiwidGFza1N0cmluZyIsInRhc2tOYW1lIiwiY3JlYXRlVGFzayJdLCJzb3VyY2VSb290IjoiIn0=